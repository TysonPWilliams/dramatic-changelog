name: Generate Dramatic Commit Message

on:
  push:
    branches:
      - main
    # Ignore commits generated by the workflow
    # by skipping if the message contains [skip dramatic]
    # You will add this string when you amend/push from within the workflow.


jobs:
  dramatize_commit:
    if: "!contains(github.event.head_commit.message, '[skip dramatic]')"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Pull and run Ollama container
        run: docker run -d --name ollama -p 11434:11434 ollama/ollama

      - name: Wait for Ollama to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:11434 | grep -q "ollama"; then
              echo "Ollama is ready!"
              break
            fi
            echo "Waiting for Ollama..."
            sleep 3
          done

      - name: Get last commit message
        id: get_commit
        run: |
          LAST_MSG=$(git log -1 --pretty=%B)
          echo "msg=$LAST_MSG" >> $GITHUB_OUTPUT

      - name: Generate dramatic commit message
        id: dramatic_commit
        run: |
            PROMPT="Rewrite the following commit message in an over-the-top, dramatic tone: '${{ steps.get_commit.outputs.msg }}'"
            
            echo "Sending to Ollama: $PROMPT"
            
            RESPONSE=$(curl -s -X POST "http://localhost:11434/api/generate" -H "Content-Type: application/json" -d "{\"model\":\"llama3:instruct\",\"prompt\":\"$PROMPT\",\"stream\":false}")
            
            if [ -z "$RESPONSE" ]; then
              echo "No response from Ollama. Exiting."
              exit 1
            fi

            echo "Full response: $RESPONSE"

            COMMIT_MSG=$(echo "$RESPONSE" | jq -r '.response // .completion // ""' | sed 's/^"//;s/"$//' | head -n 1)

            if [[ -z "$COMMIT_MSG" || "$COMMIT_MSG" == "null" ]]; then

            COMMIT_MSG="Initial commit - rewritten dramatically!"
            fi

            echo "dramatic_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config user.name "Tyson Williams"
          git config user.email "tyson.williams95@gmail.com"

      - name: Set remote with PAT
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}

      - name: Amend commit with dramatic message
        run: |
          # Avoid modifying merge commits
          if git log -1 --pretty=%B | grep -qE "Merge pull request|Auto-merge"; then
            echo "Skipping merge commit."
            exit 0
          fi

          NEW_MSG="${{ steps.dramatic_commit.outputs.dramatic_msg }}"

          echo "New dramatic message: $NEW_MSG"
          git commit --amend -m "$NEW_MSG [skip dramatic]" 


      - name: Force push amended commit
        run: git push --force origin main
